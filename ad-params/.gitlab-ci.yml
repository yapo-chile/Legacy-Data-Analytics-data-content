# One .gitlab-ci.yml file for each project must be present.
# In order to run the docker-pipeline-template, a Dockerfile symlink must be placed
# into data-content/ad-params/Dockerfile (`ln -s ./app/dockerfile ./Dockerfile`).

"download-secrets:ad-params":
  image: google/cloud-sdk
  stage: inject-secrets
  only:
    variables:
      - '$CI_COMMIT_MESSAGE =~ /ad-params/ || $SUBFOLDER == "ad-params"'
  artifacts:
    paths:
      - ad-params/app/db-secret
      - ad-params/app/surveypal-api-secret
  before_script:
    - echo "$BASE64_GOOGLE_SECRET_MANAGER_CREDENTIALS" | base64 --decode > ${HOME}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
  script:
    - cd ./ad-params/
    - gcloud secrets versions access latest --project=${GOOGLE_SECRET_MANAGER_PROJECT_ID} --secret="rundeck-APP_DW_SECRET" > ./app/db-secret
    - gcloud secrets versions access latest --project=${GOOGLE_SECRET_MANAGER_PROJECT_ID} --secret="rundeck-APP_SURVEYPAL_API_SECRET" > ./app/surveypal-api-secret

"docker-push-release:ad-params":
  extends: .docker-push-release
  dependencies: 
    - download-secrets:ad-params
  only:
    variables:
      - '$CI_COMMIT_BRANCH == "master" && ($CI_COMMIT_MESSAGE =~ /ad-params/ || $SUBFOLDER == "ad-params")'
  variables:
    CI_COMMIT_REF_NAME: "${CI_COMMIT_REF_NAME}_ad-params"
    CI_COMMIT_SHORT_SHA: "${CI_COMMIT_SHORT_SHA}_ad-params"
    IMAGE_TAG: "${CI_COMMIT_SHORT_SHA}"
  before_script:
    - cd ./ad-params/
    - sleep 5
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

"deploy-rundeck:ad-params":
  image: alpine:3.15
  stage: deploy
  dependencies:
    - docker-push-release:ad-params
  when: manual
  only:
    variables:
      - '$CI_COMMIT_BRANCH == "master" && ($CI_COMMIT_MESSAGE =~ /ad-params/ || $SUBFOLDER == "ad-params")'
  variables:
    CI_COMMIT_REF_NAME: "${CI_COMMIT_REF_NAME}_ad-params"
    CI_COMMIT_SHORT_SHA: "${CI_COMMIT_SHORT_SHA}_ad-params"
    IMAGE_TAG: "${CI_COMMIT_SHORT_SHA}"
  before_script:
    - apk add --no-cache curl gettext
    - cd ./ad-params/
  script:
    - |
      cat deploy/rundeck.yaml | envsubst | \
      curl -X POST \
      ${RUNDECK_API_PROTOCOL}'://'${RUNDECK_API_HOST}':'${RUNDECK_API_PORT}'/api/14/project/data_jobs/jobs/import?fileformat=yaml&dupeOption=update&uuidOption=preserve' \
      -H 'Content-Type: application/yaml' \
      -H 'X-Rundeck-Auth-Token: '${RUNDECK_API_TOKEN}'' \
      --data-binary '@-'
